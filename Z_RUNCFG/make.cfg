###############################
# Variables to pass to make.  #
###############################

# Options are and whatever gcc supports. E.g. i486.
# This is for using special instructions automatically in the compiled code.
# Other features are properly tested for and detected at run-time.

CPU=i386
CPU_OPTS=

# The i386 had no internal caching, but there was a common cache controller
# chip called the Intel 82385.
# First of all, the 80386 can only do aligned accesses. It does not have A0-A1
# pins to send through the address bus.
# The Intel reference sheet says that A4-A2 are the cache line selector for the
# set, which means that data in a line are addressed with a 4-byte offset.
# So the cache alignment is actually 4! This saves a massive amount of code
# bloat that GCC does by default.

# i486 tuning does a far better job in general at optimization, even on 386.
# GCC still agressively uses movzx on i386 mode (even Watcom avoids it!) and
# that is slower than just zeroing the register first. Builtins are inlined
# better and other things.

ifeq ($(CPU), "i386")

CACHE_LINE_BOUNDARY=4
ASM_BRANCH_ALIGNMENT=4
CPU_OPTS+=-falign-functions=4
CPU_OPTS+=-falign-labels=4
CPU_OPTS+=-mtune=i486 -march=i386
endif

ifeq ($(CPU), "i486")
CACHE_LINE_BOUNDARY=16
ASM_BRANCH_ALIGNMENT=16
CPU_OPTS+=--param l1-cache-size=8192
CPU_OPTS+=--param l1-cache-line-size=16
CPU_OPTS+=-march=i486 -mtune=i486
endif

ifeq ($(CPU), "i586")
CACHE_LINE_BOUNDARY=32
ASM_BRANCH_ALIGNMENT=16
CPU_OPTS += -falign-functions=4 -mtune=i586 -march=i586 --param l1-cache-line-size=32
endif

COMMON_FLAGS := -DCACHE_LINE_BOUNDARY=$(CACHE_LINE_BOUNDARY) -DASM_BRANCH_ALIGNMENT=16

################################################################################
# Programs can be specified by name if they are in your path or by their
# absolute path, which may be faster for some users. Do not rely on which from
# UNIX working unless you try it.
################################################################################

################################################################################
# Generic CFLAGS to use accross the system.
# Optimization flags should not go here.
#
CFLAGS          := -march=$(CPU) -mtune=$(CPU)

################################################################################
# Each command is defined here.
################################################################################

CC=i686-elf-gcc
CC_DOS=$(shell realpath ~/Desktop/djgpp/bin/i586-pc-msdosdjgpp-gcc)

LD              := $(CC)
LDFLAGS         :=
AS              := nasm
AFLAGS		:= $(COMMON_FLAGS)
